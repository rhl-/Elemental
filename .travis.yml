language: cpp

compiler:
  # - clang
  - gcc

env:
  - MPI=mpich2
#  - MPI=openmpi
# Open MPI is disabled until there is a way to install a reasonably recent
# version, as 1.6.5 is known to have bugs that lead to incorrect behavior in
# Elemental for complex data despite attempts at performing soft casts
# to twice as many entries of real data (with the exact cause unfortunately
# currently unknown)

# matrix:
#   exclude:
#     - env: MPI=mpich2
#       compiler: clang

notifications:
  email: false


install:
  # - sudo add-apt-repository -y ppa:staticfloat/julia-deps
  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
  # - echo deb http://llvm.org/apt/precise/ llvm-toolchain-precise main | sudo tee -a /etc/apt/sources.list
  # - curl http://llvm.org/apt/llvm-snapshot.gpg.key | sudo apt-key add -
  - sudo apt-get update -qq -y
  - sudo apt-get install -qq -y gcc-5 g++-5 gfortran-5 libstdc++-5-dev
  # clang-3.7
  # lcov
  - sh travis/install-mpi.sh $MPI
  # - sudo pip install cpp-coveralls
  - curl https://cmake.org/files/v3.3/cmake-3.3.2-Linux-x86_64.tar.gz | sudo tar -x -z --strip-components 1 -C /usr
  # - curl http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.11.orig.tar.gz | tar xz
  # - sudo make -j2 -C lcov-1.11/ install
  # - gem install coveralls-lcov

before_script:
  # - if test x$CC = xclang; then export CC=clang-3.7; export CXX=clang++-3.7; export F77=gfortran-4.9; fi
  - if test x$CC = xgcc; then export CC=gcc-5; export CXX=g++-5; export F77=gfortran-5; fi
  - sudo hostname localhost
  - test $MPI == mpich2 && MPIEXEC='mpiexec -launcher fork' || true
  # - lcov --directory . --zerocounters

script:
  - mkdir build && cd build;
    cmake -DEL_TESTS=ON -DEL_EXAMPLES=ON -DCMAKE_CXX_COMPILER=$CXX -DCMAKE_C_COMPILER=$CC -DCMAKE_Fortran_COMPILER=$F77 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=~/Install -DCMAKE_INSTALL_INCLUDEDIR=include -DCMAKE_INSTALL_LIBDIR=lib -DCMAKE_INSTALL_BINDIR=bin -DCMAKE_INSTALL_DATADIR=share -DCMAKE_INSTALL_DOCDIR=share/doc/elemental -DCMAKE_INSTALL_SYSCONFDIR=etc .. ;
    if test $? -ne 0; then cat CMakeFiles/CMakeError.log; fi
  - make -j2 && sudo make install && sudo ctest --output-on-failure

after_success:
  # - lcov --directory . --capture --output-file coverage.info # capture coverage info
  # - lcov --remove coverage.info 'tests/*' '/usr/*' --output-file coverage.info # filter out system and test code
  # - lcov --list coverage.info # debug before upload
  # - coveralls-lcov --repo-token orrZO32nywoXo9Y70QEcCJ3M8v00QVOaC coverage.info # uploads to coveralls

